@startuml class-diagram
  class Option {
    +value : string
    +__construct(key)
    +get()
  }
  class Settings {
    {static} +admin_init()
    {static} +render_section(args)
    {static} +render_fields(args)
    {static} +sanitize_text_field(fields)
  }
  class Plugin {
    -file : string
    {static} +init(file)
    +__construct(file)
    +plugins_loaded()
    {static} +wp_dashboard_setup()
    +widgets_init()
    +block_init()
    {static} +block_render()
    +plugins_url(path)
    +dirname(path)
    +path()
    +url()
  }
  class AdminWidget {
    #status : ApiStatus
    +__construct(status)
    {static} +create(status)
    +render()
  }
  class OptionsPage {
    {static} +admin_menu()
    {static} +render_page()
    {static} +add_settings_error(arr)
  }
  class Widget {
    +__construct()
    +widget(args, instance)
    +update(new_instance, old_instance)
    +form(instance)
  }
  package Integration as Integration <<Rectangle>> {
    class Integration.ApiStatus {
      +get()
    }
    class Integration.MinimumPaymentAmount {
      +set(currency_from, currency_to)
      +get()
    }
    class Integration.AvailableCurrencies {
      +get(cached)
      +is_valid(currency)
    }
    class Integration.EstimatedPrice {
      +set(amount, currency_from, currency_to)
      +get()
    }
    class Integration.PaymentStatus {
      +set(payment_id)
      +get()
    }
  }
  package Rest as Rest <<Rectangle>> {
    interface Rest.Result {
      +get()
    }
    class Rest.Error {
      #error : WP_Error
      +__construct(error)
      +get()
    }
    class Rest.Service {
      -environment : string
      +__construct(environment)
      {static} +create()
      +get(method)
      +info()
    }
    class Rest.Client {
      -service : Service
      +__construct(service)
      +get_service()
      +get(endpoint, body, headers)
      +post(endpoint, body, headers)
    }
    class Rest.Response {
      #response : string[]
      +__construct(response)
      +get()
    }
    class Rest.Endpoint {
      #client : Client
      #body : string[]
      +__construct(client)
      +get_client()
      #get_headers()
      +set_body(body)
      +__call(name, arguments)
    }
  }
  AdminWidget ..> Integration.ApiStatus
  Plugin ..> AdminWidget
  Rest.Client ..> Rest.Service
  Rest.Client ..> Rest.Service
  Rest.Endpoint ..> Rest.Client
  Rest.Endpoint ..> Rest.Client
  Rest.Endpoint <|-- Integration.ApiStatus
  Rest.Endpoint <|-- Integration.AvailableCurrencies
  Rest.Endpoint <|-- Integration.EstimatedPrice
  Rest.Endpoint <|-- Integration.MinimumPaymentAmount
  Rest.Endpoint <|-- Integration.PaymentStatus
  Rest.Result <|-- Rest.Error
  Rest.Result <|-- Rest.Response
  Rest.Service ..> Rest.Service
@enduml
